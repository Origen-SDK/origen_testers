# ***************************************************************************
# GENERATED:
#   Time:    12-Sep-2016 10:14AM
#   By:      Chris Nappi
#   Command: origen g v93k_workout -t v93k_legacy.rb
# ***************************************************************************
# ENVIRONMENT:
#   Application
#     Source:    git@github.com:Origen-SDK/origen_testers.git
#     Version:   0.8.0.pre0
#     Branch:    master(ae077e652c3) (+local edits)
#   Origen
#     Source:    https://github.com/Origen-SDK/origen
#     Version:   0.7.31
#   Plugins
#     atp:                      0.4.2
#     origen_arm_debug:         0.4.3
#     origen_doc_helpers:       0.4.2
#     origen_jtag:              0.12.0
#     origen_swd:               0.5.0
# ***************************************************************************
FORMAT nvm_reset nvm_clk nvm_clk_mux porta portb nvm_invoke nvm_done nvm_fail nvm_alvtst nvm_ahvtst nvm_dtst TCLK TRST;
#                                                   n n n p        p        n n n n n n t t
#                                                   v v v o        o        v v v v v v c r
#                                                   m m m r        r        m m m m m m l s
#                                                   - - - t        t        - - - - - - k t
#                                                   r c c a        b        i d f a a d    
#                                                   e l l                   n o a l h t    
#                                                   s k k                   v n i v v s    
#                                                   e   -                   o e l t t t    
#                                                   t   m                   k     s s      
#                                                       u                   e     t t      
#                                                       x                                  
# ######################################################################
# ## Test that basic cycling works
# ######################################################################
R1                       nvmbist                    1 1 1 00000000 00000000 0 H L X X X 0 1  # ####################################################################### ## Test that basic cycling works# ###################################################################### # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 0 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 0 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 0 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 0 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 0 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
# ######################################################################
# ## Test that the port API works
# ######################################################################
R1                       nvmbist                    1 1 1 01010101 00000000 1 H L X X X 0 1  # ####################################################################### ## Test that the port API works# ###################################################################### # ;
R1                       nvmbist                    1 1 1 HLHLHLHL 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 XXXXXXXX 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 11111111 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 22222222 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 HHHHHHHH 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 LLLLLLLL 00000000 1 H L X X X 0 1   # ;
# ######################################################################
# ## Test that the store method works
# ######################################################################
# This vector should capture the FAIL pin data
R1                       nvmbist                    1 1 1 00000000 00000000 1 H C X X X 0 1  # ####################################################################### ## Test that the store method works# ####################################################################### This vector should capture the FAIL pin data # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
# This vector should capture the FAIL pin and the PORTA data
R1                       nvmbist                    1 1 1 CCCCCCCC 00000000 1 H C X X X 0 1  # This vector should capture the FAIL pin and the PORTA data # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1   # ;
# This vector should capture the FAIL pin data
R1                       nvmbist                    1 1 1 00000000 00000000 1 H C X X X 0 1  # This vector should capture the FAIL pin data # ;
# ######################################################################
# ## Test calling a subroutine
# ######################################################################
# This vector should call subroutine 'sub1'
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  # ####################################################################### ## Test calling a subroutine# ####################################################################### This vector should call subroutine 'sub1' # ;
SQPG JSUB sub1;
# This vector should call subroutine 'sub2'
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG JSUB sub1;# This vector should call subroutine 'sub2' # ;
SQPG JSUB sub2;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG JSUB sub2; # ;
# ######################################################################
# ## Test a single pin match loop
# ######################################################################
# Wait for a maximum of 5.0ms
# for the NVM_DONE pin to go HIGH
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # ####################################################################### ## Test a single pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # ####################################################################### ## Test a single pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # ####################################################################### ## Test a single pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # ####################################################################### ## Test a single pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # ####################################################################### ## Test a single pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # ####################################################################### ## Test a single pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # ####################################################################### ## Test a single pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # ####################################################################### ## Test a single pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH # ;
SQPG MACT 1737;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG MACT 1737; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG MACT 1737; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG MACT 1737; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG MACT 1737; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG MACT 1737; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG MACT 1737; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG MACT 1737; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  SQPG MACT 1737; # ;
SQPG MRPT 8;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG MRPT 8; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1   # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1   # ;
SQPG PADDING;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG PADDING; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG PADDING; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG PADDING; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG PADDING; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG PADDING; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG PADDING; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG PADDING; # ;
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  SQPG PADDING; # ;
# ######################################################################
# ## Test a two pin match loop
# ######################################################################
# Wait for a maximum of 5.0ms
# for the NVM_DONE pin to go HIGH
# or the NVM_FAIL pin to go LOW
SQPG LBGN 11;
# Check if NVM_DONE is HIGH yet
R1                       nvmbist                    1 1 1 00000000 00000000 1 H X X X X 0 1  # ####################################################################### ## Test a two pin match loop# ####################################################################### Wait for a maximum of 5.0ms# for the NVM_DONE pin to go HIGH# or the NVM_FAIL pin to go LOWSQPG LBGN 11;# Check if NVM_DONE is HIGH yet # ;
# Wait for failure to propagate
R6015                    nvmbist                    1 1 1 00000000 00000000 1 X X X X X 0 1  # Wait for failure to propagate # ;
# Exit match loop if pin has matched (no error), otherwise clear error and remain in loop
SQPG RETC 0 0;
# Check if NVM_FAIL is LOW yet
R1                       nvmbist                    1 1 1 00000000 00000000 1 X L X X X 0 1  # Exit match loop if pin has matched (no error), otherwise clear error and remain in loopSQPG RETC 0 0;# Check if NVM_FAIL is LOW yet # ;
# Wait for failure to propagate
R6015                    nvmbist                    1 1 1 00000000 00000000 1 X X X X X 0 1  # Wait for failure to propagate # ;
# Exit match loop if pin has matched (no error), otherwise clear error and remain in loop
SQPG RETC 0 0;
SQPG LEND;
# To get here something has gone wrong, strobe again to force a pattern failure
R1                       nvmbist                    1 1 1 00000000 00000000 1 H L X X X 0 1  # Exit match loop if pin has matched (no error), otherwise clear error and remain in loopSQPG RETC 0 0;SQPG LEND;# To get here something has gone wrong, strobe again to force a pattern failure # ;
# ######################################################################
# ## Test looping, these vectors should be executed once
# ######################################################################
R1                       nvmbist                    1 1 1 10101010 00000000 1 X L X X X 0 1  # ####################################################################### ## Test looping, these vectors should be executed once# ###################################################################### # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X L X X X 0 1   # ;
# ######################################################################
# ## Test looping, these vectors should be executed 3 times
# ######################################################################
SQPG LBGN 3;
R1                       nvmbist                    1 1 1 10101010 00000000 1 X L X X X 0 1  # ####################################################################### ## Test looping, these vectors should be executed 3 times# ######################################################################SQPG LBGN 3; # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X L X X X 0 1   # ;
SQPG LEND;
# ######################################################################
# ## Test looping, these vectors should be executed 5 times
# ######################################################################
SQPG LBGN 5;
R1                       nvmbist                    1 1 1 10101010 00000000 1 X L X X X 0 1  SQPG LEND;# ####################################################################### ## Test looping, these vectors should be executed 5 times# ######################################################################SQPG LBGN 5; # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X L X X X 0 1   # ;
SQPG LEND;
# ######################################################################
# ## Test suspend compares
# ######################################################################
R1                       nvmbist                    1 1 1 01010101 00000000 1 X H X X X 0 1  SQPG LEND;# ####################################################################### ## Test suspend compares# ###################################################################### # ;
# The fail pin should not be compared on these vectors
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
R1                       nvmbist                    1 1 1 01010101 00000000 1 X X X X X 0 1  # The fail pin should not be compared on these vectors # ;
# And now it should
R1                       nvmbist                    1 1 1 01010101 00000000 1 X H X X X 0 1  # And now it should # ;
# ######################################################################
# ## Test inhibit vectors and comments
# ######################################################################
# The invoke pin should be driving high on this cycle
R1                       nvmbist                    1 1 1 01010101 00000000 1 X H X X X 0 1  # ####################################################################### ## Test inhibit vectors and comments# ####################################################################### The invoke pin should be driving high on this cycle # ;
# This should be the last thing you see until 'Inhibit complete!'
# Inhibit complete!
# The invoke pin should be driving low on this cycle
R1                       nvmbist                    1 1 1 01010101 00000000 0 X H X X X 0 1  # This should be the last thing you see until 'Inhibit complete!'# Inhibit complete!# The invoke pin should be driving low on this cycle # ;
# ######################################################################
# ## Pattern complete
# ######################################################################
SQPG STOP;
